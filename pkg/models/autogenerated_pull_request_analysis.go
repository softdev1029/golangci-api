// Code generated by go-queryset. DO NOT EDIT.
package models

import (
	"errors"
	"fmt"
	"time"

	"github.com/jinzhu/gorm"
)

// ===== BEGIN of all query sets

// ===== BEGIN of query set PullRequestAnalysisQuerySet

// PullRequestAnalysisQuerySet is an queryset type for PullRequestAnalysis
type PullRequestAnalysisQuerySet struct {
	db *gorm.DB
}

// NewPullRequestAnalysisQuerySet constructs new PullRequestAnalysisQuerySet
func NewPullRequestAnalysisQuerySet(db *gorm.DB) PullRequestAnalysisQuerySet {
	return PullRequestAnalysisQuerySet{
		db: db.Model(&PullRequestAnalysis{}),
	}
}

func (qs PullRequestAnalysisQuerySet) w(db *gorm.DB) PullRequestAnalysisQuerySet {
	return NewPullRequestAnalysisQuerySet(db)
}

// All is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) All(ret *[]PullRequestAnalysis) error {
	return qs.db.Find(ret).Error
}

// CommitSHAEq is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) CommitSHAEq(commitSHA string) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("commit_sha = ?", commitSHA))
}

// CommitSHAIn is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) CommitSHAIn(commitSHA ...string) PullRequestAnalysisQuerySet {
	if len(commitSHA) == 0 {
		qs.db.AddError(errors.New("must at least pass one commitSHA in CommitSHAIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("commit_sha IN (?)", commitSHA))
}

// CommitSHANe is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) CommitSHANe(commitSHA string) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("commit_sha != ?", commitSHA))
}

// CommitSHANotIn is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) CommitSHANotIn(commitSHA ...string) PullRequestAnalysisQuerySet {
	if len(commitSHA) == 0 {
		qs.db.AddError(errors.New("must at least pass one commitSHA in CommitSHANotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("commit_sha NOT IN (?)", commitSHA))
}

// Count is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// Create is an autogenerated method
// nolint: dupl
func (o *PullRequestAnalysis) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) CreatedAtEq(createdAt time.Time) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) CreatedAtGt(createdAt time.Time) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) CreatedAtGte(createdAt time.Time) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) CreatedAtLt(createdAt time.Time) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) CreatedAtLte(createdAt time.Time) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) CreatedAtNe(createdAt time.Time) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) Delete() error {
	return qs.db.Delete(PullRequestAnalysis{}).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *PullRequestAnalysis) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) DeletedAtEq(deletedAt time.Time) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("deleted_at = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) DeletedAtGt(deletedAt time.Time) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("deleted_at > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) DeletedAtGte(deletedAt time.Time) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("deleted_at >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) DeletedAtIsNotNull() PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) DeletedAtIsNull() PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) DeletedAtLt(deletedAt time.Time) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("deleted_at < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) DeletedAtLte(deletedAt time.Time) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("deleted_at <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) DeletedAtNe(deletedAt time.Time) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("deleted_at != ?", deletedAt))
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) GetUpdater() PullRequestAnalysisUpdater {
	return NewPullRequestAnalysisUpdater(qs.db)
}

// GithubDeliveryGUIDEq is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) GithubDeliveryGUIDEq(githubDeliveryGUID string) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("github_delivery_guid = ?", githubDeliveryGUID))
}

// GithubDeliveryGUIDIn is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) GithubDeliveryGUIDIn(githubDeliveryGUID ...string) PullRequestAnalysisQuerySet {
	if len(githubDeliveryGUID) == 0 {
		qs.db.AddError(errors.New("must at least pass one githubDeliveryGUID in GithubDeliveryGUIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("github_delivery_guid IN (?)", githubDeliveryGUID))
}

// GithubDeliveryGUIDNe is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) GithubDeliveryGUIDNe(githubDeliveryGUID string) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("github_delivery_guid != ?", githubDeliveryGUID))
}

// GithubDeliveryGUIDNotIn is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) GithubDeliveryGUIDNotIn(githubDeliveryGUID ...string) PullRequestAnalysisQuerySet {
	if len(githubDeliveryGUID) == 0 {
		qs.db.AddError(errors.New("must at least pass one githubDeliveryGUID in GithubDeliveryGUIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("github_delivery_guid NOT IN (?)", githubDeliveryGUID))
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) IDEq(ID uint) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) IDGt(ID uint) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) IDGte(ID uint) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) IDIn(ID ...uint) PullRequestAnalysisQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id IN (?)", ID))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) IDLt(ID uint) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) IDLte(ID uint) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) IDNe(ID uint) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) IDNotIn(ID ...uint) PullRequestAnalysisQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", ID))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) Limit(limit int) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// Offset is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) Offset(offset int) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Offset(offset))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs PullRequestAnalysisQuerySet) One(ret *PullRequestAnalysis) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) OrderAscByCreatedAt() PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) OrderAscByDeletedAt() PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) OrderAscByID() PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByPullRequestNumber is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) OrderAscByPullRequestNumber() PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Order("pull_request_number ASC"))
}

// OrderAscByRepoID is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) OrderAscByRepoID() PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Order("repo_id ASC"))
}

// OrderAscByReportedIssuesCount is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) OrderAscByReportedIssuesCount() PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Order("reported_issues_count ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) OrderAscByUpdatedAt() PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) OrderDescByCreatedAt() PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) OrderDescByDeletedAt() PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) OrderDescByID() PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByPullRequestNumber is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) OrderDescByPullRequestNumber() PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Order("pull_request_number DESC"))
}

// OrderDescByRepoID is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) OrderDescByRepoID() PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Order("repo_id DESC"))
}

// OrderDescByReportedIssuesCount is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) OrderDescByReportedIssuesCount() PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Order("reported_issues_count DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) OrderDescByUpdatedAt() PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// PullRequestNumberEq is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) PullRequestNumberEq(pullRequestNumber int) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("pull_request_number = ?", pullRequestNumber))
}

// PullRequestNumberGt is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) PullRequestNumberGt(pullRequestNumber int) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("pull_request_number > ?", pullRequestNumber))
}

// PullRequestNumberGte is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) PullRequestNumberGte(pullRequestNumber int) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("pull_request_number >= ?", pullRequestNumber))
}

// PullRequestNumberIn is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) PullRequestNumberIn(pullRequestNumber ...int) PullRequestAnalysisQuerySet {
	if len(pullRequestNumber) == 0 {
		qs.db.AddError(errors.New("must at least pass one pullRequestNumber in PullRequestNumberIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("pull_request_number IN (?)", pullRequestNumber))
}

// PullRequestNumberLt is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) PullRequestNumberLt(pullRequestNumber int) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("pull_request_number < ?", pullRequestNumber))
}

// PullRequestNumberLte is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) PullRequestNumberLte(pullRequestNumber int) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("pull_request_number <= ?", pullRequestNumber))
}

// PullRequestNumberNe is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) PullRequestNumberNe(pullRequestNumber int) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("pull_request_number != ?", pullRequestNumber))
}

// PullRequestNumberNotIn is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) PullRequestNumberNotIn(pullRequestNumber ...int) PullRequestAnalysisQuerySet {
	if len(pullRequestNumber) == 0 {
		qs.db.AddError(errors.New("must at least pass one pullRequestNumber in PullRequestNumberNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("pull_request_number NOT IN (?)", pullRequestNumber))
}

// RepoIDEq is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) RepoIDEq(repoID uint) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("repo_id = ?", repoID))
}

// RepoIDGt is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) RepoIDGt(repoID uint) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("repo_id > ?", repoID))
}

// RepoIDGte is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) RepoIDGte(repoID uint) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("repo_id >= ?", repoID))
}

// RepoIDIn is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) RepoIDIn(repoID ...uint) PullRequestAnalysisQuerySet {
	if len(repoID) == 0 {
		qs.db.AddError(errors.New("must at least pass one repoID in RepoIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("repo_id IN (?)", repoID))
}

// RepoIDLt is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) RepoIDLt(repoID uint) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("repo_id < ?", repoID))
}

// RepoIDLte is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) RepoIDLte(repoID uint) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("repo_id <= ?", repoID))
}

// RepoIDNe is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) RepoIDNe(repoID uint) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("repo_id != ?", repoID))
}

// RepoIDNotIn is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) RepoIDNotIn(repoID ...uint) PullRequestAnalysisQuerySet {
	if len(repoID) == 0 {
		qs.db.AddError(errors.New("must at least pass one repoID in RepoIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("repo_id NOT IN (?)", repoID))
}

// ReportedIssuesCountEq is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) ReportedIssuesCountEq(reportedIssuesCount int) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("reported_issues_count = ?", reportedIssuesCount))
}

// ReportedIssuesCountGt is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) ReportedIssuesCountGt(reportedIssuesCount int) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("reported_issues_count > ?", reportedIssuesCount))
}

// ReportedIssuesCountGte is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) ReportedIssuesCountGte(reportedIssuesCount int) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("reported_issues_count >= ?", reportedIssuesCount))
}

// ReportedIssuesCountIn is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) ReportedIssuesCountIn(reportedIssuesCount ...int) PullRequestAnalysisQuerySet {
	if len(reportedIssuesCount) == 0 {
		qs.db.AddError(errors.New("must at least pass one reportedIssuesCount in ReportedIssuesCountIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("reported_issues_count IN (?)", reportedIssuesCount))
}

// ReportedIssuesCountLt is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) ReportedIssuesCountLt(reportedIssuesCount int) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("reported_issues_count < ?", reportedIssuesCount))
}

// ReportedIssuesCountLte is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) ReportedIssuesCountLte(reportedIssuesCount int) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("reported_issues_count <= ?", reportedIssuesCount))
}

// ReportedIssuesCountNe is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) ReportedIssuesCountNe(reportedIssuesCount int) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("reported_issues_count != ?", reportedIssuesCount))
}

// ReportedIssuesCountNotIn is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) ReportedIssuesCountNotIn(reportedIssuesCount ...int) PullRequestAnalysisQuerySet {
	if len(reportedIssuesCount) == 0 {
		qs.db.AddError(errors.New("must at least pass one reportedIssuesCount in ReportedIssuesCountNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("reported_issues_count NOT IN (?)", reportedIssuesCount))
}

// ResultJSONEq is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) ResultJSONEq(resultJSON []byte) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("result_json = ?", resultJSON))
}

// ResultJSONIn is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) ResultJSONIn(resultJSON ...[]byte) PullRequestAnalysisQuerySet {
	if len(resultJSON) == 0 {
		qs.db.AddError(errors.New("must at least pass one resultJSON in ResultJSONIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("result_json IN (?)", resultJSON))
}

// ResultJSONNe is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) ResultJSONNe(resultJSON []byte) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("result_json != ?", resultJSON))
}

// ResultJSONNotIn is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) ResultJSONNotIn(resultJSON ...[]byte) PullRequestAnalysisQuerySet {
	if len(resultJSON) == 0 {
		qs.db.AddError(errors.New("must at least pass one resultJSON in ResultJSONNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("result_json NOT IN (?)", resultJSON))
}

// SetCommitSHA is an autogenerated method
// nolint: dupl
func (u PullRequestAnalysisUpdater) SetCommitSHA(commitSHA string) PullRequestAnalysisUpdater {
	u.fields[string(PullRequestAnalysisDBSchema.CommitSHA)] = commitSHA
	return u
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u PullRequestAnalysisUpdater) SetCreatedAt(createdAt time.Time) PullRequestAnalysisUpdater {
	u.fields[string(PullRequestAnalysisDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u PullRequestAnalysisUpdater) SetDeletedAt(deletedAt *time.Time) PullRequestAnalysisUpdater {
	u.fields[string(PullRequestAnalysisDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetGithubDeliveryGUID is an autogenerated method
// nolint: dupl
func (u PullRequestAnalysisUpdater) SetGithubDeliveryGUID(githubDeliveryGUID string) PullRequestAnalysisUpdater {
	u.fields[string(PullRequestAnalysisDBSchema.GithubDeliveryGUID)] = githubDeliveryGUID
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u PullRequestAnalysisUpdater) SetID(ID uint) PullRequestAnalysisUpdater {
	u.fields[string(PullRequestAnalysisDBSchema.ID)] = ID
	return u
}

// SetPullRequestNumber is an autogenerated method
// nolint: dupl
func (u PullRequestAnalysisUpdater) SetPullRequestNumber(pullRequestNumber int) PullRequestAnalysisUpdater {
	u.fields[string(PullRequestAnalysisDBSchema.PullRequestNumber)] = pullRequestNumber
	return u
}

// SetRepoID is an autogenerated method
// nolint: dupl
func (u PullRequestAnalysisUpdater) SetRepoID(repoID uint) PullRequestAnalysisUpdater {
	u.fields[string(PullRequestAnalysisDBSchema.RepoID)] = repoID
	return u
}

// SetReportedIssuesCount is an autogenerated method
// nolint: dupl
func (u PullRequestAnalysisUpdater) SetReportedIssuesCount(reportedIssuesCount int) PullRequestAnalysisUpdater {
	u.fields[string(PullRequestAnalysisDBSchema.ReportedIssuesCount)] = reportedIssuesCount
	return u
}

// SetResultJSON is an autogenerated method
// nolint: dupl
func (u PullRequestAnalysisUpdater) SetResultJSON(resultJSON []byte) PullRequestAnalysisUpdater {
	u.fields[string(PullRequestAnalysisDBSchema.ResultJSON)] = resultJSON
	return u
}

// SetStatus is an autogenerated method
// nolint: dupl
func (u PullRequestAnalysisUpdater) SetStatus(status string) PullRequestAnalysisUpdater {
	u.fields[string(PullRequestAnalysisDBSchema.Status)] = status
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u PullRequestAnalysisUpdater) SetUpdatedAt(updatedAt time.Time) PullRequestAnalysisUpdater {
	u.fields[string(PullRequestAnalysisDBSchema.UpdatedAt)] = updatedAt
	return u
}

// StatusEq is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) StatusEq(status string) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("status = ?", status))
}

// StatusIn is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) StatusIn(status ...string) PullRequestAnalysisQuerySet {
	if len(status) == 0 {
		qs.db.AddError(errors.New("must at least pass one status in StatusIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("status IN (?)", status))
}

// StatusNe is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) StatusNe(status string) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("status != ?", status))
}

// StatusNotIn is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) StatusNotIn(status ...string) PullRequestAnalysisQuerySet {
	if len(status) == 0 {
		qs.db.AddError(errors.New("must at least pass one status in StatusNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("status NOT IN (?)", status))
}

// Update is an autogenerated method
// nolint: dupl
func (u PullRequestAnalysisUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u PullRequestAnalysisUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) UpdatedAtEq(updatedAt time.Time) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) UpdatedAtGt(updatedAt time.Time) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) UpdatedAtGte(updatedAt time.Time) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) UpdatedAtLt(updatedAt time.Time) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) UpdatedAtLte(updatedAt time.Time) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs PullRequestAnalysisQuerySet) UpdatedAtNe(updatedAt time.Time) PullRequestAnalysisQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// ===== END of query set PullRequestAnalysisQuerySet

// ===== BEGIN of PullRequestAnalysis modifiers

// PullRequestAnalysisDBSchemaField describes database schema field. It requires for method 'Update'
type PullRequestAnalysisDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f PullRequestAnalysisDBSchemaField) String() string {
	return string(f)
}

// PullRequestAnalysisDBSchema stores db field names of PullRequestAnalysis
var PullRequestAnalysisDBSchema = struct {
	ID                  PullRequestAnalysisDBSchemaField
	CreatedAt           PullRequestAnalysisDBSchemaField
	UpdatedAt           PullRequestAnalysisDBSchemaField
	DeletedAt           PullRequestAnalysisDBSchemaField
	RepoID              PullRequestAnalysisDBSchemaField
	PullRequestNumber   PullRequestAnalysisDBSchemaField
	GithubDeliveryGUID  PullRequestAnalysisDBSchemaField
	CommitSHA           PullRequestAnalysisDBSchemaField
	Status              PullRequestAnalysisDBSchemaField
	ReportedIssuesCount PullRequestAnalysisDBSchemaField
	ResultJSON          PullRequestAnalysisDBSchemaField
}{

	ID:                  PullRequestAnalysisDBSchemaField("id"),
	CreatedAt:           PullRequestAnalysisDBSchemaField("created_at"),
	UpdatedAt:           PullRequestAnalysisDBSchemaField("updated_at"),
	DeletedAt:           PullRequestAnalysisDBSchemaField("deleted_at"),
	RepoID:              PullRequestAnalysisDBSchemaField("repo_id"),
	PullRequestNumber:   PullRequestAnalysisDBSchemaField("pull_request_number"),
	GithubDeliveryGUID:  PullRequestAnalysisDBSchemaField("github_delivery_guid"),
	CommitSHA:           PullRequestAnalysisDBSchemaField("commit_sha"),
	Status:              PullRequestAnalysisDBSchemaField("status"),
	ReportedIssuesCount: PullRequestAnalysisDBSchemaField("reported_issues_count"),
	ResultJSON:          PullRequestAnalysisDBSchemaField("result_json"),
}

// Update updates PullRequestAnalysis fields by primary key
// nolint: dupl
func (o *PullRequestAnalysis) Update(db *gorm.DB, fields ...PullRequestAnalysisDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":                    o.ID,
		"created_at":            o.CreatedAt,
		"updated_at":            o.UpdatedAt,
		"deleted_at":            o.DeletedAt,
		"repo_id":               o.RepoID,
		"pull_request_number":   o.PullRequestNumber,
		"github_delivery_guid":  o.GithubDeliveryGUID,
		"commit_sha":            o.CommitSHA,
		"status":                o.Status,
		"reported_issues_count": o.ReportedIssuesCount,
		"result_json":           o.ResultJSON,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update PullRequestAnalysis %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// PullRequestAnalysisUpdater is an PullRequestAnalysis updates manager
type PullRequestAnalysisUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewPullRequestAnalysisUpdater creates new PullRequestAnalysis updater
// nolint: dupl
func NewPullRequestAnalysisUpdater(db *gorm.DB) PullRequestAnalysisUpdater {
	return PullRequestAnalysisUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&PullRequestAnalysis{}),
	}
}

// ===== END of PullRequestAnalysis modifiers

// ===== END of all query sets
